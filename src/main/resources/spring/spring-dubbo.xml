<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://code.alibabatech.com/schema/dubbo
	   http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- 使用zookeeper注册中心暴露服务地址 -->
    <dubbo:registry address="#{dubboConfig['dubbo.registry.address']}" group="#{dubboConfig['dubbo.registry.group']}"/>

    <dubbo:annotation/>

    <import resource="classpath*:/spring/dubbo-*.xml"/>

    <!-- dubbo异步调用的2种方式，主要体现在consumer端 -->
    <!--<dubbo:reference id="fooService"-->
    <!--interface="com.tzg.dubbo.api.FooService"-->
    <!--check="#{dubboConfig['dubbo.reference.check]}"-->
    <!--retries="#{dubboConfig['dubbo.reference.retries]}"-->
    <!--timeout="#{dubboConfig['dubbo.reference.timeout]}">-->
    <!--&lt;!&ndash; 方法一： 没有回调返回监听 &ndash;&gt;-->
    <!--<dubbo:method name="fooMethod"-->
    <!--async="true"-->
    <!--sent="#{dubboConfig['dubbo.reference.method.sent]}"-->
    <!--return="#{dubboConfig['dubbo.reference.method.return]}"/>-->
    <!--&lt;!&ndash; 方法二：　有回调返回，并被处理 &ndash;&gt;-->
    <!--<dubbo:method name="fooMethod"-->
    <!--async="true"-->
    <!--onreturn="demoCallback.onreturn"-->
    <!--onthrow="demoCallback.onthrow"/>-->
    <!--</dubbo:reference>-->
    <!--<bean id="demoCallback" class="com.tzg.dubbo.listener.NotifyImpl"/>-->

</beans>